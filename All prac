@prac1:-
i. Write a program using Kotlin to implement control structures and loops.

1) If condition

fun main(args: Array<String>) {
val age:Int = 10
if (age > 18) {
print("Adult")
} else {
print("Minor")
}
}

1) If else condition

fun main(args: Array<String>) {
val age:Int = 10
val result = if (age > 18) {
"Adult"
} else {
"Minor"
}
println(result)
}

2) If...else...If condition

fun main(args: Array<String>) {
val age:Int = 13
val result = if (age > 19) {
"Adult"
} else if ( age > 12 && age < 20 ){
"Teen"
} else {
"Minor"
}
print("The value of result : ")
println(result)
}

3) Nested If condition

fun main(args: Array<String>) {
val age:Int = 20
val result = if (age > 12) {
if ( age > 12 && age < 20 ){
"Teen"
}else{
"Adult"
}
} else {
"Minor"
}
print("The value of result : ")
println(result)
}

5) When
a)

fun main(args: Array<String>) {
val day = 2
val result = when (day) {
1 -> "Monday"
2 -> "Tuesday"
3 -> "Wednesday"
4 -> "Thursday"
5 -> "Friday"
6 -> "Saturday"
7 -> "Sunday"
else -> "Invalid day."
}
println(result)
}

b) write above Code once again without using expression form:

fun main(args: Array<String>) {
val day = 2
when (day) {
1 -> println("Monday")
2 -> println("Tuesday")
3 -> println("Wednesday")
4 -> println("Thursday")
5 -> println("Friday")
6 -> println("Saturday")
7 -> println("Sunday")
else -> println("Invalid day.")
}
}

c)combine multiple when conditions into a single condition.

fun main(args: Array<String>) {
val day = 2
when (day) {
1, 2, 3, 4, 5 -> println("Weekday")
else -> println("Weekend")
}}

d)Range in when Conditions

fun main(args: Array<String>) {
val day = 2
when (day) {
in 1..5 -> println("Weekday")
else -> println("Weekend")
}
}

Loops in Kotlin

1) For loop

fun main(args : Array<String>) {
val marks = arrayOf(80,85,60,90,70)
for(item in marks.indices)
println("marks[$item]: "+ marks[item])
}

--Iterate Through a Array

fun main(args: Array<String>) {
var fruits = arrayOf("Orange", "Apple", "Mango", "Banana")
for (item in fruits) {
println(item)
}
}

2) While loop

fun main(args: Array<String>) {
var x:Int = 0
println("Example of While Loop--")
while(x< = 10) {
println(x)
x++
}
}

3) Do While Loop

fun main(args: Array<String>){
var i = 1
do {
println(i)
i++
}
while (i<=5);
}

4) Kotlin Break Statement

fun main(args: Array<String>) {
var i = 0;
while (i++ < 100) {
println(i)
if( i == 3 ){
break
}
}
}

b) Write a program to implement object-oriented concepts in Kotlin

Create a Class:-

class Car {
var brand = ""
var model = ""
var year = 0
}
fun main() {
val c1 = Car()
c1.brand = "Ford"
c1.model = "Mustang"
c1.year = 1969
println(c1.brand)
println(c1.model)
println(c1.year)
}

You can create multiple objects of one class:-

class Car {
var brand = ""
var model = ""
var year = 0
}

fun main() {
val c1 = Car()
c1.brand = "Ford"
c1.model = "Mustang"
c1.year = 1969
val c2 = Car()
c2.brand = "BMW"
c2.model = "X5"
c2.year = 1999
println(c1.brand)
println(c2.brand)
}

Constructor:-

class Car(var brand: String, var model: String, var year: Int)
fun main() {
val c1 = Car("Ford", "Mustang", 1969)
println(c1.brand)
println(c1.model)
println(c1.year)
}

Function:-

class Car(var brand: String, var model: String, var year: Int) {
fun drive() {
println("Wrooom!")
}
}
fun main() {
val c1 = Car("Ford", "Mustang", 1969)
println(c1.brand + " " + c1.model + " " + c1.year)
c1.drive()
}

Class Function Parameters:-

fun drive() {
println("Wrooom!")
}
fun speed(maxSpeed: Int) {
println("Max speed is: " + maxSpeed)
}
}
fun main() {
val c1 = Car("Ford", "Mustang", 1969)
println(c1.brand + " " + c1.model + " " + c1.year)
c1.drive()
c1.speed(200)
}

********************************************************************************************************************************************************************************************

@prac2:-
i. Create an Android application to design screens using different layouts and UI including Button, Edittext, Textview, Radio Button etc.
ii. Write an android application demonstrating response to event/user interaction for
a. Checkbox
b. Radio button
c. Button

Activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
android:id="@+id/linearlayout"
tools:ignore="ExtraText">
tools:context=".MainActivity">

<TextView
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_margin="50dp"
android:text="Registration Page"
android:textAlignment="center"
android:textColor="@color/purple_500"
android:textSize="30sp"
tools:ignore="MissingConstraints" />

<EditText
android:id="@+id/editTextPersonName"
android:layout_width="300dp"
android:layout_height="60dp"
android:layout_marginLeft="40dp"
android:layout_marginTop="50dp"
android:ems="10"
android:hint="Please write your name"
android:inputType="textPersonName" />

<Button
android:id="@+id/button"
android:layout_width="300dp"
android:layout_height="wrap_content"
android:layout_marginLeft="40dp"
android:layout_marginTop="30dp"
android:text="OK" />

<TextView
android:id="@+id/textView"
android:layout_width="300dp"
android:layout_height="50dp"
android:layout_marginLeft="40dp"
android:layout_marginTop="30dp"
android:gravity="center|center_horizontal"
android:text="Result" />

<TextView
android:id="@+id/textViewResult"
android:layout_width="300dp"
android:layout_height="60dp"
android:layout_marginLeft="40dp"
android:layout_marginTop="50dp"
android:background="#CC1C1C"
android:gravity="center_vertical"
android:paddingLeft="7dp"
android:text="What is your gender?"
android:textColor="@color/white"
android:textSize="24sp"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toTopOf="parent" />

<CheckBox
android:id="@+id/checkBoxMale"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginStart="160dp"
android:layout_marginTop="20dp"
android:text="Male"
android:textSize="20sp"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/textViewResult" />

<CheckBox
android:id="@+id/checkBoxFemale"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginStart="160dp"
android:layout_marginTop="10dp"
android:minHeight="48dp"
android:text="Female"
android:textSize="20sp"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/checkBoxMale"
tools:ignore="TouchTargetSizeCheck" />

</LinearLayout>

MainActivity.kt

package com.example.myapplicationprac2

import android.annotation.SuppressLint
import android.graphics.Color
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.*

class MainActivity : AppCompatActivity() {

lateinit var name: EditText
lateinit var ok: Button
lateinit var res: TextView
lateinit var result: TextView
lateinit var male: CheckBox
lateinit var female: CheckBox

@SuppressLint("MissingInflatedId")
override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState)
setContentView(R.layout.activity_main)

name = findViewById(R.id.editTextPersonName)
ok = findViewById(R.id.button)
res = findViewById(R.id.textView)

ok.setOnClickListener {

var userName: String = name.text.toString() // this code will take the
text that user enters and convert into string
res.setText(userName)
}
male = findViewById(R.id.checkBoxMale)
female = findViewById(R.id.checkBoxFemale)
result = findViewById(R.id.textViewResult)
female.setOnClickListener {
if (female.isChecked) {
result.text = "Your gender is female"
male.isChecked = false
} else {
result.text = "What is your gender?"
}
male.setOnClickListener {
if (male.isChecked) {
result.text = "Your gender is male"
female.isChecked = false
} else {
result.text = "What is your gender?"
}
}
}
}
}

****************************************************************************************************************
@prac3:-
i. Create an Android application to demonstrate intents

Activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">

<EditText
android:id="@+id/editTextName"
android:layout_width="300dp"
android:layout_height="50dp"
android:layout_marginTop="100dp"
android:ems="10"
android:hint="Please enter your name"
android:inputType="textPersonName"
android:text="Name"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.5"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toTopOf="parent" />

<EditText
android:id="@+id/editTextAge"
android:layout_width="300dp"
android:layout_height="50dp"
android:layout_marginTop="20dp"
android:ems="10"
android:hint="Please enter your age"
android:inputType="number"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.5"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/editTextName" />

<Button
android:id="@+id/button"
android:layout_width="150dp"
android:layout_height="wrap_content"
android:layout_marginTop="50dp"
android:text="SEND"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.5"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/editTextAge" />
</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.kt

package com.example.myapplicationintent

import android.annotation.SuppressLint
import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.EditText

class MainActivity : AppCompatActivity() {

lateinit var name : EditText
lateinit var age : EditText
lateinit var send : Button

@SuppressLint("MissingInflatedId")
override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState)
setContentView(R.layout.activity_main)

name = findViewById(R.id.editTextName)
age = findViewById(R.id.editTextAge)
send = findViewById(R.id.button)

send.setOnClickListener {

var userName : String = name.text.toString()
var userAge : Int = age.text.toString().toInt()

var intent = Intent(this@MainActivity,SecondActivity::class.java) //open
second activity

intent.putExtra("username",userName)
intent.putExtra("userage",userAge)
startActivity(intent)

}
}
}

Design (Second Activity)

Activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".SecondActivity">

<TextView
android:id="@+id/textView"
android:layout_width="300dp"
android:layout_height="wrap_content"
android:gravity="center"
android:text="TextView"
android:textColor="@color/black"
android:textSize="24sp"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.5"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toTopOf="parent"
app:layout_constraintVertical_bias="0.5" />
</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.kt

package com.example.myapplicationintent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.TextView

class SecondActivity : AppCompatActivity() {

lateinit var result : TextView

override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState)
setContentView(R.layout.activity_second)

result = findViewById(R.id.textView)
var userName : String = intent.getStringExtra("username").toString()
var userAge : Int = intent.getIntExtra("userage",0)

result.text = "Your name is $userName and your age is $userAge"
}
}

AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools">

<application
android:allowBackup="true"
android:dataExtractionRules="@xml/data_extraction_rules"
android:fullBackupContent="@xml/backup_rules"
android:icon="@mipmap/ic_launcher"
android:label="@string/app_name"
android:roundIcon="@mipmap/ic_launcher_round"
android:supportsRtl="true"
android:theme="@style/Theme.MyApplicationintent"
tools:targetApi="31">
<activity
android:name=".SecondActivity"
android:exported="true"
android:parentActivityName=".MainActivity">
<meta-data
android:name="android.app.lib_name"
android:value="" />
</activity>
<activity
android:name=".MainActivity"
android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />

<category android:name="android.intent.category.LAUNCHER" />
</intent-filter>

<meta-data
android:name="android.app.lib_name"
android:value="" />
</activity>
</application>

</manifest>

********************************************************************************************************************************************************************************************
@prac4:-
i)Create an Android application to use a camera and capture image/video and
display them on the screen.

Activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<!-- add Camera Button to open the Camera -->
<Button
android:id="@+id/camera_button"
android:layout_width="100dp"
android:layout_height="50dp"
android:layout_marginLeft="140dp"
android:text="Camera" />

<!-- add ImageView to display the captured image -->
<ImageView
android:id="@+id/click_image"
android:layout_width="350dp"
android:layout_height="450dp"
android:layout_marginLeft="15dp"
android:layout_marginTop="70dp"
android:layout_marginBottom="10dp" />
</RelativeLayout>

MainActivity.kt

package com.example.cameranew
import android.content.Intent
import android.graphics.Bitmap
import android.os.Build
import android.os.Bundle
import android.provider.MediaStore
import android.widget.Button
import android.widget.ImageView
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {


lateinit var camera_open_id: Button
lateinit var click_image_id: ImageView
companion object {
private const val pic_id = 123
}
override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState)
setContentView(R.layout.activity_main)
camera_open_id = findViewById(R.id.camera_button)
click_image_id = findViewById(R.id.click_image)
camera_open_id.setOnClickListener {
val camera_intent = if (Build.VERSION.SDK_INT >=
Build.VERSION_CODES.CUPCAKE) {
Intent(MediaStore.ACTION_IMAGE_CAPTURE)
} else {
TODO("VERSION.SDK_INT < CUPCAKE")
}
startActivityForResult(camera_intent, pic_id)
}
}
override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
super.onActivityResult(requestCode, resultCode, data)
if (requestCode == pic_id) {
val photo = data!!.extras!!["data"] as Bitmap?
click_image_id.setImageBitmap(photo)
}
}
}

********************************************************************************************************************************************************************************************
@prac5:-
5) Create an Android application to demonstrate XML based animation

Activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:id="@+id/relativeLayout"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">

<TextView
android:id="@+id/txtAnim"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_centerInParent="true"
android:text="Hello World!"
android:textColor="@color/black"
android:textSize="34sp"
android:textStyle="bold"
tools:ignore="MissingConstraints"
tools:layout_editor_absoluteX="125dp"
tools:layout_editor_absoluteY="158dp" />

<Button
android:id="@+id/btnTranslate"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginStart="4dp"
android:layout_marginTop="492dp"
android:layout_marginBottom="63dp"
android:layout_weight="1"
android:text="Translate"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="1.0"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toTopOf="parent"
app:layout_constraintVertical_bias="1.0" />

<Button
android:id="@+id/btnAlpha"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginStart="4dp"
android:layout_marginBottom="80dp"
android:layout_weight="1"
android:text="Alpha"
app:layout_constraintBottom_toBottomOf="@+id/btnTranslate"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="1.0"
app:layout_constraintStart_toStartOf="parent" />

<Button
android:id="@+id/btnScale"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginStart="11dp"
android:layout_marginEnd="10dp"
android:layout_marginBottom="96dp"
android:layout_weight="1"
android:text="Scale"
app:layout_constraintBottom_toBottomOf="@+id/btnRotate"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="1.0"
app:layout_constraintStart_toStartOf="parent" />

<Button
android:id="@+id/btnRotate"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginStart="4dp"
android:layout_marginBottom="104dp"
android:layout_weight="1"
android:text="Rotate"
app:layout_constraintBottom_toBottomOf="@+id/btnAlpha"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="1.0"
app:layout_constraintStart_toEndOf="@+id/Translate"
app:layout_constraintStart_toStartOf="parent"
tools:ignore="UnknownId" />

</androidx.constraintlayout.widget.ConstraintLayout>

Move.xml

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
android:interpolator ="@android:anim/bounce_interpolator">
<translate android:fromXDelta="0"
android:toXDelta="400"
android:duration="4000"
android:repeatCount="infinite"
android:repeatMode="reverse"/>
</set>

Alpha.xml

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
<alpha android:fromAlpha="0"
android:toAlpha="1"
android:duration="4000"
android:repeatCount = "infinite"/>
</set>

Rotation.xml

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
<rotate android:fromDegrees="0"
android:toDegrees="3600"
android:duration="12000"
android:pivotX="50%"
android:pivotY="50%"/>
</set>

Scale.xml

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
<scale android:fromXScale="1"
android:toXScale="4"
android:fromYScale="1"
android:toYScale="4"
android:duration="4000"/>
</set>

MainActivity.java

package com.example.animation;

import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

TextView txtAnim;
Button btnTranslate,btnAlpha,btnRotate,btnScale;

@SuppressLint("MissingInflatedId")
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
txtAnim = findViewById(R.id.txtAnim);
btnTranslate = findViewById(R.id.btnTranslate);
btnAlpha = findViewById(R.id.btnAlpha);
btnRotate = findViewById(R.id.btnRotate);
btnScale = findViewById(R.id.btnScale);

btnTranslate.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
Animation move =
AnimationUtils.loadAnimation(getApplicationContext(),R.anim.move);
txtAnim.startAnimation(move);
}
});

btnAlpha.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
Animation alpha =
AnimationUtils.loadAnimation(getApplicationContext(),R.anim.alpha);
txtAnim.startAnimation(alpha);
}
});

btnRotate.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
Animation rotation =
AnimationUtils.loadAnimation(getApplicationContext(),R.anim.rotation);
txtAnim.startAnimation(rotation);
}
});

btnScale.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
Animation scale =
AnimationUtils.loadAnimation(getApplicationContext(),R.anim.scale);
txtAnim.startAnimation(scale);
}
});

}
}

****************************************************************************************************************************************************************************************
@prac6:-
6) Create an Android application to record the current location. Based on the current
location allow the user to use some useful services/applications

Activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">

<TextView
android:id="@+id/title"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:text="My Location"
app:layout_constraintVertical_bias=".08"
android:textSize="28sp"
android:textColor="#009688"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintLeft_toLeftOf="parent"
app:layout_constraintRight_toRightOf="parent"
app:layout_constraintTop_toTopOf="parent" />

<Button
android:id="@+id/show_my_location"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:text="Show My Location"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintLeft_toLeftOf="parent"
app:layout_constraintRight_toRightOf="parent"
app:layout_constraintTop_toTopOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>

Paste the below code under your dependencies section.:-

Code:

plugins {
id 'com.android.application'
id 'org.jetbrains.kotlin.android'
}

android {
namespace 'com.example.myapplicationlocation'
compileSdk 33

defaultConfig {
applicationId "com.example.myapplicationlocation"
minSdk 22
targetSdk 33
versionCode 1
versionName "1.0"

testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
}
buildTypes {
release {
minifyEnabled false
proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
'proguard-rules.pro'
}
}
compileOptions {
sourceCompatibility JavaVersion.VERSION_1_8
targetCompatibility JavaVersion.VERSION_1_8
}
kotlinOptions {
jvmTarget = '1.8'
}
}

dependencies {

implementation 'androidx.core:core-ktx:1.7.0'
implementation 'androidx.appcompat:appcompat:1.6.1'
implementation 'com.google.android.material:material:1.8.0'
implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
testImplementation 'junit:junit:4.13.2'
androidTestImplementation 'androidx.test.ext:junit:1.1.5'
androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
implementation 'com.google.android.gms:play-services-location:18.0.0'
}

Code: AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools">

<uses-permission android:name="android.permission.INTERNET"/>
<uses-permission
android:name="android.permission.ACCESS_FINE_LOCATION"/>
<uses-permission
android:name="android.permission.ACCESS_COARSE_LOCATION"/>

<application
android:allowBackup="true"
android:dataExtractionRules="@xml/data_extraction_rules"
android:fullBackupContent="@xml/backup_rules"
android:icon="@mipmap/ic_launcher"
android:label="@string/app_name"
android:roundIcon="@mipmap/ic_launcher_round"
android:supportsRtl="true"
android:theme="@style/Theme.MyApplicationlocation"
tools:targetApi="31">

<activity
android:name=".MainActivity"
android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />

<category android:name="android.intent.category.LAUNCHER" />
</intent-filter>

<meta-data
android:name="android.app.lib_name"
android:value="" />
</activity>
</application>

</manifest>

MainActivity.kt

package com.example.myapplicationlocation

import android.content.pm.PackageManager
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.Toast
import androidx.core.app.ActivityCompat
import com.google.android.gms.location.FusedLocationProviderClient
import com.google.android.gms.location.LocationServices

class MainActivity : AppCompatActivity()
{
lateinit var locationProvideClient:FusedLocationProviderClient
lateinit var showLocation:Button

override fun onCreate(savedInstanceState: Bundle?)
{
super.onCreate(savedInstanceState)
setContentView(R.layout.activity_main)
locationProvideClient =
LocationServices.getFusedLocationProviderClient(this)

showLocation = findViewById(R.id.show_my_location)

showLocation.setOnClickListener{
getYourCurrentLocation()
}
}

private fun getYourCurrentLocation()
{
if(ActivityCompat.checkSelfPermission(this,
android.Manifest.permission.ACCESS_FINE_LOCATION) !=
PackageManager.PERMISSION_GRANTED &&
ActivityCompat.checkSelfPermission(this,
android.Manifest.permission.ACCESS_COARSE_LOCATION) !=
PackageManager.PERMISSION_GRANTED)
{
ActivityCompat.requestPermissions(
this,
arrayOf(android.Manifest.permission.ACCESS_FINE_LOCATION),
909)
return
}

val task = locationProvideClient.lastLocation

task.addOnSuccessListener {
if(it!=null)
{
Toast.makeText(this,"Latitude : ${it.latitude} \n Longitude:
${it.longitude}",
Toast.LENGTH_LONG).show()
}
else
{
Toast.makeText(this,
"Your location can't be displayed",
Toast.LENGTH_LONG).show()
}

}
}
}

*******************************************************************************************************************************************************************************************
@prac7:-
7) Create a media player application in android that plays audio. Implement play, pause,
and loop features.

Activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity"
tools:ignore="HardcodedText">

<TextView
android:id="@+id/headingText"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_centerHorizontal="true"
android:layout_marginTop="32dp"
android:text="MEDIA PLAYER"
android:textSize="18sp"
android:textStyle="bold" />

<LinearLayout
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_below="@id/headingText"
android:layout_marginTop="16dp"
android:gravity="center_horizontal">

<Button
android:id="@+id/stopButton"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginEnd="8dp"

android:backgroundTint="@color/design_default_color_primary_variant"
android:text="STOP"
android:textColor="@android:color/white" />

<Button
android:id="@+id/playButton"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginEnd="8dp"
android:backgroundTint="@color/material_dynamic_neutral10"
android:text="PLAY"
android:textColor="@android:color/white" />

<Button
android:id="@+id/pauseButton"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:backgroundTint="@color/material_dynamic_primary80"
android:text="PAUSE"
android:textColor="@android:color/white" />

</LinearLayout>

</RelativeLayout>


MainActivity.kt

package com.example.mediaplayer

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.media.MediaPlayer
import android.widget.Button

class MainActivity : AppCompatActivity() {

lateinit var bPlay : Button
lateinit var bPause : Button
lateinit var bStop : Button

override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState)
setContentView(R.layout.activity_main)

// register all the buttons using their appropriate IDs
bPlay = findViewById(R.id.playButton)
bPause = findViewById(R.id.pauseButton)
bStop = findViewById(R.id.stopButton)

val mediaPlayer: MediaPlayer =
MediaPlayer.create(applicationContext,R.raw.airtelmobile)
// handle the start button to
// start the audio playback
bPlay.setOnClickListener {
// start method is used to start
// playing the audio file
mediaPlayer.start()
}

// handle the pause button to put the
// MediaPlayer instance at the Pause state
bPause.setOnClickListener {
// pause() method can be used to
// pause the mediaplyer instance
mediaPlayer.pause()
}

// handle the stop button to stop playing
// and prepare the mediaplayer instance
// for the next instance of play
bStop.setOnClickListener {
// stop() method is used to completely
// stop playing the mediaplayer instance
mediaPlayer.stop()

// after stopping the mediaplayer instance
mediaPlayer.prepare()
}
}
}

******************************************************************************END***********************************************************************************************************


























